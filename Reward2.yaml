openapi: 3.0.3
info:
  title: BBH Rewards API
  description: Provides reward and loyalty information to BBH's ITV and mobile platforms.
  version: 1.0.0
  x-restgeninfo: {}
servers:
- url: /
security:
- bearerAuth: []
paths:
  /account/{accountNumber}:
    get:
      parameters:
      - name: accountNumber
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatus'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
      callbacks: {}
  /account/{accountNumber}/offers:
    get:
      parameters:
      - name: accountNumber
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferList'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
      callbacks: {}
  /account/{accountNumber}/last-trip:
    get:
      parameters:
      - name: accountNumber
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LastTripDetail'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
      callbacks: {}
  /account/{accountNumber}/reservations:
    get:
      parameters:
      - name: accountNumber
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationList'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
      callbacks: {}
  /account/{accountNumber}/room-rates:
    get:
      parameters:
      - name: accountNumber
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: months
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomRateList'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
      callbacks: {}
  /account/{accountNumber}/special-room-rate:
    get:
      parameters:
      - name: accountNumber
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialRoomRate'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
      callbacks: {}
  /account/{accountNumber}/check-pin:
    post:
      parameters:
      - name: accountNumber
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckPinResponse'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
      callbacks: {}
  /account/{accountNumber}/validate-pin:
    post:
      parameters:
      - name: accountNumber
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pin'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatePinResponse'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
      callbacks: {}
components:
  schemas:
    AccountStatus:
      type: object
      properties:
        compBalance:
          type: number
        freePlayBalance:
          type: number
        pointsBalance:
          type: number
        tierPointsEarned:
          type: number
        tierPointsToNext:
          type: number
        compExpirationDate:
          type: string
          format: date
        freePlayExpirationDate:
          type: string
          format: date
        tierCurrentCode:
          type: string
        tierCurrentName:
          type: string
        tierNextName:
          type: string
        tierExpirationDate:
          type: string
          format: date
        tierNextMessage:
          type: string
        tierCurrentBase:
          type: number
        tierNextBase:
          type: number
      example: |-
        {
          "tierCurrentBase": 3000,
          "tierPointsToNext": 9900,
          "pointsBalance": 10100,
          "freePlayExpirationDate": "2022-04-23",
          "tierNextMessage": "You need 9900 points to reach Prime",
          "tierCurrentCode": "PREF",
          "tierExpirationDate": "2022-04-23",
          "tierCurrentName": "Preferred",
          "freePlayBalance": 0,
          "tierPointsEarned": 7100,
          "compExpirationDate": "2022-02-23",
          "compBalance": 548.25,
          "tierNextName": "Prime",
          "tierNextBase": 20000
        }
    LastTripDetail:
      type: object
      properties:
        freePlayEarned:
          type: number
          format: int32
        compEarned:
          type: number
          format: int32
        tripStartDate:
          type: string
          format: date
        tripEndDate:
          type: string
          format: date
      example: '{"slotDollarsEarned":2134995019,"tripStartDate":"2022-02-23","compDollarsEarned":1818059384,"tripEndDate":"2022-02-23"}'
    OfferType:
      type: string
      enum:
      - MatchPlay
      - Hotel
      - Casino
      - Event
      - Entertainment
      - Other
    Offer:
      type: object
      properties:
        offerType:
          $ref: '#/components/schemas/OfferType'
        offerTypeString:
          type: string
        description:
          type: string
        displayDateRange:
          type: string
        validFrom:
          type: string
          format: date
        validTo:
          type: string
          format: date
      example: |-
        {
           "offerType": "MatchPlay",
           "displayDateRange": "2/20/2022 - 2/22/2022",
           "description": "$50 MATCH PLAY",
           "validFrom": "2022-02-20",
           "offerTypeString": "Match Play",
           "validTo": "2022-02-22"
        }
    ReservationType:
      type: string
      enum:
      - Hotel
      - Dining
      - Event
      - Other
    Reservation:
      type: object
      properties:
        reservationType:
          $ref: '#/components/schemas/ReservationType'
        reservationTypeString:
          type: string
        description:
          type: string
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
      example: |-
        {
           "start": "2022-02-23T23:00:00Z",
           "reservationTypeString": "Restaurant",
           "reservationType": "Dining",
           "description": "AMADA (Party of 2)",
           "end": "2022-02-23T23:00:00Z"
        }
    RoomRate:
      type: object
      properties:
        date:
          type: string
          format: date
        rate:
          type: string
        roomType:
          type: string
        bedType:
          type: string
        available:
          type: boolean
      example: |-
        {
          "date": "2022-02-23",
          "rate": "$86",
          "available": true,
          "roomType": "Deluxe Room",
          "bedType": "1 King Bed"
        }
    SpecialRoomRate:
      type: object
      properties:
        date:
          type: string
          format: date
        rate:
          type: string
        description:
          type: string
      example: |-
        {
          "date": "2022-02-27",
          "rate": "$99",
          "description": "Classic room, 1 King Bed"
        }
    OfferList:
      type: array
      items:
        $ref: '#/components/schemas/Offer'
    ReservationList:
      type: array
      items:
        $ref: '#/components/schemas/Reservation'
    RoomRateList:
      type: array
      example: |-
        [
          {
            "date": "2022-02-23",
            "rate": "$86",
            "available": true,
            "roomType": "Deluxe Room",
            "bedType": "1 King Bed"
          },
          {
            "date": "2022-02-24",
            "rate": "$99",
            "available": true,
            "roomType": "Deluxe Room",
            "bedType": "1 King Bed"
          },
            {
            "date": "2022-02-25",
            "available": false
          }
        ]
      items:
        $ref: '#/components/schemas/RoomRate'
    pin:
      type: string
    CheckPinResponse:
      type: object
      properties:
        hasValidPin:
          type: boolean
        message:
          type: string
      example: |-
        {
          "message": "Please visit the Rewards Desk to reset your PIN.",
          "hasValidPin": false
        }
    ValidatePinResponse:
      type: object
      properties:
        isValidPin:
          type: boolean
        message:
          type: string
      example: |-
        {
          "isValidPin": false,
          "message": "Please visit the Rewards Desk to reset your PIN."
        }
  responses:
    401:
      description: Access token is missing or invalid
    404:
      description: Account not found
  parameters: {}
  examples: {}
  requestBodies: {}
  securitySchemes:
    bearerAuth:
      type: http
      scheme: Bearer
  callbacks: {}
